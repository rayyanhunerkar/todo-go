definitions:
  models.CardRequest:
    properties:
      assigned_to:
        type: string
      deadline:
        type: string
      description:
        type: string
      state_id:
        type: string
      title:
        type: string
    required:
    - deadline
    - description
    - state_id
    - title
    type: object
  models.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  models.RegisterRequest:
    properties:
      first_name:
        type: string
      last_name:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - first_name
    - last_name
    - password
    - username
    type: object
  models.Response:
    properties:
      data: {}
      message:
        type: string
    type: object
  models.StateCreateRequest:
    properties:
      description:
        type: string
      name:
        type: string
    required:
    - name
    type: object
  models.StateUpdateRequest:
    properties:
      description:
        type: string
      name:
        type: string
    required:
    - name
    type: object
info:
  contact: {}
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login
      parameters:
      - description: LoginRequest
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
      summary: Login
      tags:
      - Auth
  /auth/signup:
    post:
      consumes:
      - application/json
      description: Register a new User
      parameters:
      - description: RegisterRequest
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/models.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
      summary: Register
      tags:
      - Auth
  /cards:
    get:
      consumes:
      - application/json
      description: Create a new task
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - Bearer: []
      summary: FetchCards
      tags:
      - Cards
    post:
      consumes:
      - application/json
      description: Create a new task
      parameters:
      - description: CardRequest
        in: body
        name: card
        required: true
        schema:
          $ref: '#/definitions/models.CardRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - Bearer: []
      summary: CreateCard
      tags:
      - Cards
  /cards/{id}:
    delete:
      consumes:
      - application/json
      description: Create a new task
      parameters:
      - description: fetch by ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      security:
      - Bearer: []
      summary: FetchCards
      tags:
      - Cards
    get:
      consumes:
      - application/json
      description: Create a new task
      parameters:
      - description: fetch by ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - Bearer: []
      summary: FetchCards
      tags:
      - Cards
    patch:
      consumes:
      - application/json
      description: Update a task
      parameters:
      - description: Update by ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - Bearer: []
      summary: UpdateCard
      tags:
      - Cards
  /states:
    get:
      consumes:
      - application/json
      description: Create a new state
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - Bearer: []
      summary: Create State
      tags:
      - State
    post:
      consumes:
      - application/json
      description: Create a new state
      parameters:
      - description: StateRequest
        in: body
        name: state
        required: true
        schema:
          $ref: '#/definitions/models.StateCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - Bearer: []
      summary: Create State
      tags:
      - State
  /states/{id}:
    delete:
      consumes:
      - application/json
      description: Create a new state
      parameters:
      - description: fetch by id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      security:
      - Bearer: []
      summary: Create State
      tags:
      - State
    patch:
      consumes:
      - application/json
      description: Create a new state
      parameters:
      - description: fetch by id
        in: path
        name: id
        required: true
        type: string
      - description: StateRequest
        in: body
        name: state
        required: true
        schema:
          $ref: '#/definitions/models.StateUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - Bearer: []
      summary: Create State
      tags:
      - State
    post:
      consumes:
      - application/json
      description: Create a new state
      parameters:
      - description: fetch by id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - Bearer: []
      summary: Create State
      tags:
      - State
  /user/me:
    get:
      description: Gets current user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - Bearer: []
      summary: Me
      tags:
      - User
securityDefinitions:
  Bearer:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
